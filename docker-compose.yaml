# https://github.com/langfuse/langfuse/blob/main/docker-compose.yml
services:
  reverse-proxy:
    image: traefik:v3.1.2
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      # - "--log.level=DEBUG"
      - "--entrypoints.web.address=:80"
    ports:
      # The HTTP port
      - "${SERVER_PORT:-8089}:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  langfuse-server:
    image: langfuse/langfuse:2
    depends_on:
      db:
        condition: service_healthy
    # ports:
    #   - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - NEXTAUTH_SECRET=mysecret
      - SALT=mysalt
      - ENCRYPTION_KEY=0000000000000000000000000000000000000000000000000000000000000000 # generate via `openssl rand -hex 32`
      - NEXTAUTH_URL=http://${SERVER_HOST:-localhost}:${SERVER_PORT:-8089}
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-true}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
      - LANGFUSE_INIT_ORG_ID=${LANGFUSE_INIT_ORG_ID:-}
      - LANGFUSE_INIT_ORG_NAME=${LANGFUSE_INIT_ORG_NAME:-}
      - LANGFUSE_INIT_PROJECT_ID=${LANGFUSE_INIT_PROJECT_ID:-}
      - LANGFUSE_INIT_PROJECT_NAME=${LANGFUSE_INIT_PROJECT_NAME:-}
      - LANGFUSE_INIT_PROJECT_PUBLIC_KEY=${LANGFUSE_INIT_PROJECT_PUBLIC_KEY:-}
      - LANGFUSE_INIT_PROJECT_SECRET_KEY=${LANGFUSE_INIT_PROJECT_SECRET_KEY:-}
      - LANGFUSE_INIT_USER_EMAIL=${LANGFUSE_INIT_USER_EMAIL:-}
      - LANGFUSE_INIT_USER_NAME=${LANGFUSE_INIT_USER_NAME:-}
      - LANGFUSE_INIT_USER_PASSWORD=${LANGFUSE_INIT_USER_PASSWORD:-}
    labels:
      traefik.http.routers.langfuse.rule: "Host(`${SERVER_HOST:-localhost}`)"
      traefik.http.services.langfuse.loadbalancer.server.port: 3000

  db:
    image: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432
    volumes:
      - database_data:/var/lib/postgresql/data

  playground:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - STREAMLIT_SERVER_BASE_URL_PATH=/playground
    labels:
      traefik.http.routers.playground.rule: "Host(`${SERVER_HOST:-localhost}`) && PathPrefix(`/playground`)"
      traefik.http.services.playground.loadbalancer.server.port: 8501
    # ports:
    #   - "8501:8501"

volumes:
  database_data:
    driver: local
